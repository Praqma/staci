Sending build context to Docker daemon 16.38 kB
Sending build context to Docker daemon 
Step 0 : FROM ubuntu:vivid
 ---> 013f3d01d247
Step 1 : ENV BAMBOO_HOME /var/lib/bamboo BAMBOO_INSTALL /opt/atlassian/bamboo BAMBOO_UID 1000 BAMBOO_USER atlassian BAMBOO_GID 1000 BAMBOO_GROUP atlassian BAMBOO_VERSION 5.9.4 DOCKER_GID 999 DOCKER_GROUP docker DOCKER_VERSION 1.8.1 JAVA_HOME /usr/lib/jvm/java-8-oracle JAVA_VERSION 8 JAVA_UPDATE 60
 ---> Using cache
 ---> 0c0fff868937
Step 2 : RUN set -x  && export DEBIAN_FRONTEND=noninteractive  && apt-get --assume-yes --no-install-recommends install         ca-certificates  && apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 7B2C3B0889BF5709A105D03AC2518248EEA14886  && echo deb http://ppa.launchpad.net/webupd8team/java/ubuntu vivid main > /etc/apt/sources.list.d/webupd8team-ubuntu-java-vivid.list  && echo oracle-java${JAVA_VERSION}-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections  && echo oracle-java${JAVA_VERSION}-unlimited-jce-policy shared/accepted-oracle-license-v1-1 select true | debconf-set-selections  && apt-get update  && apt-get --assume-yes --no-install-recommends install         oracle-java${JAVA_VERSION}-installer=${JAVA_VERSION}u${JAVA_UPDATE}*         oracle-java${JAVA_VERSION}-unlimited-jce-policy=${JAVA_VERSION}u${JAVA_UPDATE}*         oracle-java${JAVA_VERSION}-set-default=${JAVA_VERSION}u${JAVA_UPDATE}*         libapr1         libaprutil1         libtcnative-1         ca-certificates-java         curl         git         openssh-client         wget         xmlstarlet  && sed -i -e 's/java-6-sun/java-${JAVA_VERSION}-oracle/g' /etc/ca-certificates/update.d/jks-keystore  && update-ca-certificates  && mv -v ${JAVA_HOME}/jre/lib/security/cacerts ${JAVA_HOME}/jre/lib/security/cacerts.original  && ln -vs /etc/ssl/certs/java/cacerts ${JAVA_HOME}/jre/lib/security/  && ln -sv /usr/lib/x86_64-linux-gnu /usr/lib64  && mkdir -p /tmp  && wget --progress=dot:mega -P /tmp https://get.docker.com/builds/$(uname -s)/$(uname -i)/docker-${DOCKER_VERSION}  && mv -v /tmp/docker-${DOCKER_VERSION} /usr/bin/docker  && groupadd -rg ${DOCKER_GID} ${DOCKER_GROUP}  && chown -v root:${DOCKER_GROUP} /usr/bin/docker  && chmod -v +xs /usr/bin/docker  && mkdir -p ${BAMBOO_INSTALL} ${BAMBOO_HOME}  && groupadd -g ${BAMBOO_GID} ${BAMBOO_GROUP}  && useradd -d ${BAMBOO_INSTALL} -u ${BAMBOO_UID} -g ${BAMBOO_GID} -G ${DOCKER_GROUP} -c "Atlassian Bamboo" ${BAMBOO_USER}  && wget --progress=dot:mega -O- "https://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-${BAMBOO_VERSION}.tar.gz" | tar -xz --strip=1 -C "${BAMBOO_INSTALL}"  && echo "bamboo.home=${BAMBOO_HOME}" > ${BAMBOO_INSTALL}/atlassian-bamboo/WEB-INF/classes/bamboo-init.properties  && chmod -R 700 ${BAMBOO_INSTALL} ${BAMBOO_HOME}  && chown -R ${BAMBOO_USER}:${BAMBOO_GROUP}         ${BAMBOO_HOME}         ${BAMBOO_INSTALL}         /etc/default/cacerts         /etc/java-${JAVA_VERSION}-oracle         /etc/ssl  && find ${BAMBOO_INSTALL} -name "*.sh" | xargs chmod -v +x  && apt-get clean  && rm -rf         /etc/java-6-sun         /tmp/*         /var/tmp/*         /var/cache/oracle-*         /var/lib/apt/lists/*
 ---> Using cache
 ---> 65a72affca2e
Step 3 : COPY src/main/container/srv/ /srv/
 ---> Using cache
 ---> aa1a80dc0337
Step 4 : RUN set -x  && find /srv/ -name "*.sh" | xargs chmod -v +x
 ---> Using cache
 ---> 4bb79dd9822f
Step 5 : USER ${BAMBOO_USER}:${BAMBOO_GROUP}
 ---> Using cache
 ---> 0027837417ca
Step 6 : VOLUME ${BAMBOO_HOME}
 ---> Using cache
 ---> 713e50077573
Step 7 : EXPOSE 8085 54663
 ---> Using cache
 ---> f37414195b9a
Step 8 : WORKDIR ${BAMBOO_INSTALL}
 ---> Using cache
 ---> 297e21f6b726
Step 9 : ENTRYPOINT /srv/bamboo.sh
 ---> Using cache
 ---> 0f57e03fddd5
Step 10 : CMD server
 ---> Using cache
 ---> 0a97ac024437
Successfully built 0a97ac024437
